{
  "version": 3,
  "sources": ["../../cli-kit/src/private/node/context/deprecations-store.ts"],
  "sourcesContent": ["interface DeprecationsStore {\n  nextDeprecationDate: Date | undefined\n}\n\ninterface GlobalWithDeprecationsStore {\n  deprecationsStore: DeprecationsStore\n}\n\nconst globalWithDeprecationsStore: GlobalWithDeprecationsStore = {\n  ...globalThis,\n  deprecationsStore: {\n    nextDeprecationDate: undefined,\n  },\n}\n\n/**\n * Get the earliest date in the future when deprecations will no longer be supported, if any.\n *\n * @returns The next deprecation date.\n */\nexport function getNextDeprecationDate(): Date | undefined {\n  return globalWithDeprecationsStore.deprecationsStore.nextDeprecationDate\n}\n\n/**\n * Set the next deprecation date to the earliest date in the future.\n *\n * @param dates - Dates when deprecations will no longer be supported.\n */\nexport function setNextDeprecationDate(dates: Date[]): Date | undefined {\n  if (dates.length < 1) return\n\n  const earliestFutureDateTime = earliestDateTimeAfter(Date.now(), dates)\n  if (!earliestFutureDateTime) return\n\n  const nextDeprecationDate = getNextDeprecationDate()\n  if (!nextDeprecationDate || earliestFutureDateTime < nextDeprecationDate.getTime()) {\n    globalWithDeprecationsStore.deprecationsStore.nextDeprecationDate = new Date(earliestFutureDateTime)\n  }\n}\n\nfunction earliestDateTimeAfter(afterTime: number, dates: Date[]): number | undefined {\n  const times = dates.map((date) => date.getTime())\n  return times.sort().find((time) => time > afterTime)\n}\n"],
  "mappings": ";;;;;AAQA;IAAM,8BAA2D;EAC/D,GAAG;EACH,mBAAmB;IACjB,qBAAqB;;;AASnB,SAAU,yBAAsB;AACpC,SAAO,4BAA4B,kBAAkB;AACvD;AAOM,SAAU,uBAAuB,OAAa;AAClD,MAAI,MAAM,SAAS;AAAG;AAEtB,MAAM,yBAAyB,sBAAsB,KAAK,IAAG,GAAI,KAAK;AACtE,MAAI,CAAC;AAAwB;AAE7B,MAAM,sBAAsB,uBAAsB;AAClD,GAAI,CAAC,uBAAuB,yBAAyB,oBAAoB,QAAO,OAC9E,4BAA4B,kBAAkB,sBAAsB,IAAI,KAAK,sBAAsB;AAEvG;AAEA,SAAS,sBAAsB,WAAmB,OAAa;AAE7D,SADc,MAAM,IAAI,CAAC,SAAS,KAAK,QAAO,CAAE,EACnC,KAAI,EAAG,KAAK,CAAC,SAAS,OAAO,SAAS;AACrD;",
  "names": []
}
