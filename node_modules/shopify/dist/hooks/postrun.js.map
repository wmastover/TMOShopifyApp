{
  "version": 3,
  "sources": ["../../src/hooks/postrun.ts", "../../../cli-kit/src/public/node/hooks/postrun.ts", "../../../cli-kit/src/public/node/hooks/deprecations.ts"],
  "sourcesContent": ["export {hook as default} from '@shopify/cli-kit/node/hooks/postrun'\n", "import {postrun as deprecationsHook} from './deprecations.js'\nimport {reportAnalyticsEvent} from '../analytics.js'\nimport {outputDebug} from '../../../public/node/output.js'\nimport BaseCommand from '../base-command.js'\nimport * as metadata from '../../../public/node/metadata.js'\nimport {Command, Hook} from '@oclif/core'\n\n// This hook is called after each successful command run. More info: https://oclif.io/docs/hooks\nexport const hook: Hook.Postrun = async ({config, Command}) => {\n  await detectStopCommand(Command as unknown as typeof Command)\n  await reportAnalyticsEvent({config, exitMode: 'ok'})\n  deprecationsHook(Command)\n\n  const command = Command.id.replace(/:/g, ' ')\n  outputDebug(`Completed command ${command}`)\n}\n\n/**\n * Override the command name with the stop one for analytics purposes.\n *\n * @param commandClass - Oclif command class.\n */\nasync function detectStopCommand(commandClass: Command.Class | typeof BaseCommand): Promise<void> {\n  const currentTime = new Date().getTime()\n  if (commandClass && Object.prototype.hasOwnProperty.call(commandClass, 'analyticsStopCommand')) {\n    const stopCommand = (commandClass as typeof BaseCommand).analyticsStopCommand()\n    if (stopCommand) {\n      const {commandStartOptions} = metadata.getAllSensitiveMetadata()\n      await metadata.addSensitiveMetadata(() => ({\n        commandStartOptions: {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ...commandStartOptions!,\n          startTime: currentTime,\n          startCommand: stopCommand,\n        },\n      }))\n    }\n  }\n}\n", "import {getNextDeprecationDate} from '../../../private/node/context/deprecations-store.js'\nimport {renderWarning} from '@shopify/cli-kit/node/ui'\nimport {Command} from '@oclif/core'\n\n/**\n * After a successful command run, renders an upgrade warning if `nextDeprecationDate` is present.\n *\n * @param Command - The class of the command that was run.\n */\nexport const postrun = (Command: Command.Class): void => {\n  const nextDeprecationDate = getNextDeprecationDate()\n  if (nextDeprecationDate) {\n    const forThemes = Command.id.includes('theme')\n    renderUpgradeWarning(nextDeprecationDate, forThemes)\n  }\n}\n\n/**\n * Renders a warning to upgrade to avoid using deprecated features\n * that will no longer be supported after the specified date.\n *\n * @param upgradeByDate - The earliest future date when deprecated features will no longer be supported.\n * @param forThemes - If true, references the upgrade link for themes, else for apps.\n */\nfunction renderUpgradeWarning(upgradeByDate: Date, forThemes?: boolean): void {\n  const dateFormat = new Intl.DateTimeFormat('default', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n  const formattedDate = dateFormat.format(upgradeByDate)\n\n  const headline = `Upgrade to the latest CLI version by ${formattedDate}.`\n  const body = 'This command requires an upgrade to continue working as intended.'\n  const upgradeLink = {\n    link: {\n      label: 'upgrade Shopify CLI',\n      url: forThemes\n        ? `https://shopify.dev/docs/themes/tools/cli#upgrade-shopify-cli`\n        : `https://shopify.dev/docs/apps/tools/cli#upgrade-shopify-cli`,\n    },\n  }\n  const nextSteps = [['Run', {command: 'upgrade'}, 'to', upgradeLink]]\n\n  renderWarning({\n    headline,\n    body,\n    nextSteps,\n  })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;AASO,IAAM,UAAU,CAAC,YAAgC;AACtD,MAAM,sBAAsB,uBAAsB;AAClD,MAAI,qBAAqB;AACvB,QAAM,YAAY,QAAQ,GAAG,SAAS,OAAO;AAC7C,yBAAqB,qBAAqB,SAAS;EACrD;AACF;AASA,SAAS,qBAAqB,eAAqB,WAAmB;AAQpE,MAAM,WAAW,wCAPE,IAAI,KAAK,eAAe,WAAW;IACpD,MAAM;IACN,OAAO;IACP,KAAK;GACN,EACgC,OAAO,aAAa,CAEiB;AAYtE,gBAAc;IACZ;IACA,MAbW;IAcX,WALgB,CAAC,CAAC,OAAO,EAAC,SAAS,UAAS,GAAG,MAR7B;MAClB,MAAM;QACJ,OAAO;QACP,KAAK,YACD,kEACA;;KAG0D,CAAC;GAMlE;AACH;;;ADzCO,IAAM,OAAqB,OAAO,EAAC,QAAQ,QAAO,MAAK;AAC5D,QAAM,kBAAkB,OAAoC,GAC5D,MAAM,qBAAqB,EAAC,QAAQ,UAAU,KAAI,CAAC,GACnD,QAAiB,OAAO;AAExB,MAAM,UAAU,QAAQ,GAAG,QAAQ,MAAM,GAAG;AAC5C,cAAY,qBAAqB,OAAO,EAAE;AAC5C;AAOA,eAAe,kBAAkB,cAAgD;AAC/E,MAAM,eAAc,oBAAI,KAAI,GAAG,QAAO;AACtC,MAAI,gBAAgB,OAAO,UAAU,eAAe,KAAK,cAAc,sBAAsB,GAAG;AAC9F,QAAM,cAAe,aAAoC,qBAAoB;AAC7E,QAAI,aAAa;AACf,UAAM,EAAC,oBAAmB,IAAa,wBAAuB;AAC9D,YAAe,qBAAqB,OAAO;QACzC,qBAAqB;;UAEnB,GAAG;UACH,WAAW;UACX,cAAc;;QAEhB;IACJ;EACF;AACF;",
  "names": []
}
