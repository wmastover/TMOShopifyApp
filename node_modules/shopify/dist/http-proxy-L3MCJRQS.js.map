{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js", "../../../node_modules/.pnpm/requires-port@1.0.0/node_modules/requires-port/index.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/lib/http-proxy/common.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/lib/http-proxy/passes/web-outgoing.js", "../../../node_modules/.pnpm/follow-redirects@1.15.6/node_modules/follow-redirects/debug.js", "../../../node_modules/.pnpm/follow-redirects@1.15.6/node_modules/follow-redirects/index.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/lib/http-proxy/passes/ws-incoming.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/lib/http-proxy/index.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/lib/http-proxy.js", "../../../node_modules/.pnpm/http-proxy@1.18.1/node_modules/http-proxy/index.js"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n", "var common   = exports,\n    url      = require('url'),\n    extend   = require('util')._extend,\n    required = require('requires-port');\n\nvar upgradeHeader = /(^|,)\\s*upgrade\\s*($|,)/i,\n    isSSL = /^https|wss/;\n\n/**\n * Simple Regex for testing if protocol is https\n */\ncommon.isSSL = isSSL;\n/**\n * Copies the right headers from `options` and `req` to\n * `outgoing` which is then used to fire the proxied\n * request.\n *\n * Examples:\n *\n *    common.setupOutgoing(outgoing, options, req)\n *    // => { host: ..., hostname: ...}\n *\n * @param {Object} Outgoing Base object to be filled with required properties\n * @param {Object} Options Config object passed to the proxy\n * @param {ClientRequest} Req Request Object\n * @param {String} Forward String to select forward or target\n *\u00A0\n * @return {Object} Outgoing Object with all required properties set\n *\n * @api private\n */\n\ncommon.setupOutgoing = function(outgoing, options, req, forward) {\n  outgoing.port = options[forward || 'target'].port ||\n                  (isSSL.test(options[forward || 'target'].protocol) ? 443 : 80);\n\n  ['host', 'hostname', 'socketPath', 'pfx', 'key',\n    'passphrase', 'cert', 'ca', 'ciphers', 'secureProtocol'].forEach(\n    function(e) { outgoing[e] = options[forward || 'target'][e]; }\n  );\n\n  outgoing.method = options.method || req.method;\n  outgoing.headers = extend({}, req.headers);\n\n  if (options.headers){\n    extend(outgoing.headers, options.headers);\n  }\n\n  if (options.auth) {\n    outgoing.auth = options.auth;\n  }\n  \n  if (options.ca) {\n      outgoing.ca = options.ca;\n  }\n\n  if (isSSL.test(options[forward || 'target'].protocol)) {\n    outgoing.rejectUnauthorized = (typeof options.secure === \"undefined\") ? true : options.secure;\n  }\n\n\n  outgoing.agent = options.agent || false;\n  outgoing.localAddress = options.localAddress;\n\n  //\n  // Remark: If we are false and not upgrading, set the connection: close. This is the right thing to do\n  // as node core doesn't handle this COMPLETELY properly yet.\n  //\n  if (!outgoing.agent) {\n    outgoing.headers = outgoing.headers || {};\n    if (typeof outgoing.headers.connection !== 'string'\n        || !upgradeHeader.test(outgoing.headers.connection)\n       ) { outgoing.headers.connection = 'close'; }\n  }\n\n\n  // the final path is target path + relative path requested by user:\n  var target = options[forward || 'target'];\n  var targetPath = target && options.prependPath !== false\n    ? (target.path || '')\n    : '';\n\n  //\n  // Remark: Can we somehow not use url.parse as a perf optimization?\n  //\n  var outgoingPath = !options.toProxy\n    ? (url.parse(req.url).path || '')\n    : req.url;\n\n  //\n  // Remark: ignorePath will just straight up ignore whatever the request's\n  // path is. This can be labeled as FOOT-GUN material if you do not know what\n  // you are doing and are using conflicting options.\n  //\n  outgoingPath = !options.ignorePath ? outgoingPath : '';\n\n  outgoing.path = common.urlJoin(targetPath, outgoingPath);\n\n  if (options.changeOrigin) {\n    outgoing.headers.host =\n      required(outgoing.port, options[forward || 'target'].protocol) && !hasPort(outgoing.host)\n        ? outgoing.host + ':' + outgoing.port\n        : outgoing.host;\n  }\n  return outgoing;\n};\n\n/**\n * Set the proper configuration for sockets,\n * set no delay and set keep alive, also set\n * the timeout to 0.\n *\n * Examples:\n *\n *    common.setupSocket(socket)\n *    // => Socket\n *\n * @param {Socket} Socket instance to setup\n *\u00A0\n * @return {Socket} Return the configured socket.\n *\n * @api private\n */\n\ncommon.setupSocket = function(socket) {\n  socket.setTimeout(0);\n  socket.setNoDelay(true);\n\n  socket.setKeepAlive(true, 0);\n\n  return socket;\n};\n\n/**\n * Get the port number from the host. Or guess it based on the connection type.\n *\n * @param {Request} req Incoming HTTP request.\n *\n * @return {String} The port number.\n *\n * @api private\n */\ncommon.getPort = function(req) {\n  var res = req.headers.host ? req.headers.host.match(/:(\\d+)/) : '';\n\n  return res ?\n    res[1] :\n    common.hasEncryptedConnection(req) ? '443' : '80';\n};\n\n/**\n * Check if the request has an encrypted connection.\n *\n * @param {Request} req Incoming HTTP request.\n *\n * @return {Boolean} Whether the connection is encrypted or not.\n *\n * @api private\n */\ncommon.hasEncryptedConnection = function(req) {\n  return Boolean(req.connection.encrypted || req.connection.pair);\n};\n\n/**\n * OS-agnostic join (doesn't break on URLs like path.join does on Windows)>\n *\n * @return {String} The generated path.\n *\n * @api private\n */\n\ncommon.urlJoin = function() {\n    //\n    // We do not want to mess with the query string. All we want to touch is the path.\n    //\n  var args = Array.prototype.slice.call(arguments),\n      lastIndex = args.length - 1,\n      last = args[lastIndex],\n      lastSegs = last.split('?'),\n      retSegs;\n\n  args[lastIndex] = lastSegs.shift();\n\n  //\n  // Join all strings, but remove empty strings so we don't get extra slashes from\n  // joining e.g. ['', 'am']\n  //\n  retSegs = [\n    args.filter(Boolean).join('/')\n        .replace(/\\/+/g, '/')\n        .replace('http:/', 'http://')\n        .replace('https:/', 'https://')\n  ];\n\n  // Only join the query string if it exists so we don't have trailing a '?'\n  // on every request\n\n  // Handle case where there could be multiple ? in the URL.\n  retSegs.push.apply(retSegs, lastSegs);\n\n  return retSegs.join('?')\n};\n\n/**\n * Rewrites or removes the domain of a cookie header\n *\n * @param {String|Array} Header\n * @param {Object} Config, mapping of domain to rewritten domain.\n *                 '*' key to match any domain, null value to remove the domain.\n *\n * @api private\n */\ncommon.rewriteCookieProperty = function rewriteCookieProperty(header, config, property) {\n  if (Array.isArray(header)) {\n    return header.map(function (headerElement) {\n      return rewriteCookieProperty(headerElement, config, property);\n    });\n  }\n  return header.replace(new RegExp(\"(;\\\\s*\" + property + \"=)([^;]+)\", 'i'), function(match, prefix, previousValue) {\n    var newValue;\n    if (previousValue in config) {\n      newValue = config[previousValue];\n    } else if ('*' in config) {\n      newValue = config['*'];\n    } else {\n      //no match, return previous value\n      return match;\n    }\n    if (newValue) {\n      //replace value\n      return prefix + newValue;\n    } else {\n      //remove value\n      return '';\n    }\n  });\n};\n\n/**\n * Check the host and see if it potentially has a port in it (keep it simple)\n *\n * @returns {Boolean} Whether we have one or not\n *\n * @api private\n */\nfunction hasPort(host) {\n  return !!~host.indexOf(':');\n};\n", "var url    = require('url'),\n    common = require('../common');\n\n\nvar redirectRegex = /^201|30(1|2|7|8)$/;\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\nmodule.exports = { // <--\n\n  /**\n   * If is a HTTP 1.0 request, remove chunk headers\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  removeChunked: function removeChunked(req, res, proxyRes) {\n    if (req.httpVersion === '1.0') {\n      delete proxyRes.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * If is a HTTP 1.0 request, set the correct connection header\n   * or if connection header not present, then use `keep-alive`\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  setConnection: function setConnection(req, res, proxyRes) {\n    if (req.httpVersion === '1.0') {\n      proxyRes.headers.connection = req.headers.connection || 'close';\n    } else if (req.httpVersion !== '2.0' && !proxyRes.headers.connection) {\n      proxyRes.headers.connection = req.headers.connection || 'keep-alive';\n    }\n  },\n\n  setRedirectHostRewrite: function setRedirectHostRewrite(req, res, proxyRes, options) {\n    if ((options.hostRewrite || options.autoRewrite || options.protocolRewrite)\n        && proxyRes.headers['location']\n        && redirectRegex.test(proxyRes.statusCode)) {\n      var target = url.parse(options.target);\n      var u = url.parse(proxyRes.headers['location']);\n\n      // make sure the redirected host matches the target host before rewriting\n      if (target.host != u.host) {\n        return;\n      }\n\n      if (options.hostRewrite) {\n        u.host = options.hostRewrite;\n      } else if (options.autoRewrite) {\n        u.host = req.headers['host'];\n      }\n      if (options.protocolRewrite) {\n        u.protocol = options.protocolRewrite;\n      }\n\n      proxyRes.headers['location'] = u.format();\n    }\n  },\n  /**\n   * Copy headers from proxyResponse to response\n   * set each header in response object.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   * @param {Object} Options options.cookieDomainRewrite: Config to rewrite cookie domain\n   *\n   * @api private\n   */\n  writeHeaders: function writeHeaders(req, res, proxyRes, options) {\n    var rewriteCookieDomainConfig = options.cookieDomainRewrite,\n        rewriteCookiePathConfig = options.cookiePathRewrite,\n        preserveHeaderKeyCase = options.preserveHeaderKeyCase,\n        rawHeaderKeyMap,\n        setHeader = function(key, header) {\n          if (header == undefined) return;\n          if (rewriteCookieDomainConfig && key.toLowerCase() === 'set-cookie') {\n            header = common.rewriteCookieProperty(header, rewriteCookieDomainConfig, 'domain');\n          }\n          if (rewriteCookiePathConfig && key.toLowerCase() === 'set-cookie') {\n            header = common.rewriteCookieProperty(header, rewriteCookiePathConfig, 'path');\n          }\n          res.setHeader(String(key).trim(), header);\n        };\n\n    if (typeof rewriteCookieDomainConfig === 'string') { //also test for ''\n      rewriteCookieDomainConfig = { '*': rewriteCookieDomainConfig };\n    }\n\n    if (typeof rewriteCookiePathConfig === 'string') { //also test for ''\n      rewriteCookiePathConfig = { '*': rewriteCookiePathConfig };\n    }\n\n    // message.rawHeaders is added in: v0.11.6\n    // https://nodejs.org/api/http.html#http_message_rawheaders\n    if (preserveHeaderKeyCase && proxyRes.rawHeaders != undefined) {\n      rawHeaderKeyMap = {};\n      for (var i = 0; i < proxyRes.rawHeaders.length; i += 2) {\n        var key = proxyRes.rawHeaders[i];\n        rawHeaderKeyMap[key.toLowerCase()] = key;\n      }\n    }\n\n    Object.keys(proxyRes.headers).forEach(function(key) {\n      var header = proxyRes.headers[key];\n      if (preserveHeaderKeyCase && rawHeaderKeyMap) {\n        key = rawHeaderKeyMap[key] || key;\n      }\n      setHeader(key, header);\n    });\n  },\n\n  /**\n   * Set the statusCode from the proxyResponse\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  writeStatusCode: function writeStatusCode(req, res, proxyRes) {\n    // From Node.js docs: response.writeHead(statusCode[, statusMessage][, headers])\n    if(proxyRes.statusMessage) {\n      res.statusCode = proxyRes.statusCode;\n      res.statusMessage = proxyRes.statusMessage;\n    } else {\n      res.statusCode = proxyRes.statusCode;\n    }\n  }\n\n};\n", "var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n", "var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Whether to use the native URL object or the legacy url module\nvar useNativeURL = false;\ntry {\n  assert(new URL());\n}\ncatch (error) {\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\n}\n\n// URL fields to preserve in copy operations\nvar preservedUrlFields = [\n  \"auth\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"path\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"query\",\n  \"search\",\n  \"hash\",\n];\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\",\n  RedirectionError\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// istanbul ignore next\nvar destroy = Writable.prototype.destroy || noop;\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    try {\n      self._processResponse(response);\n    }\n    catch (cause) {\n      self.emit(\"error\", cause instanceof RedirectionError ?\n        cause : new RedirectionError({ cause: cause }));\n    }\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  destroyRequest(this._currentRequest);\n  this._currentRequest.abort();\n  this.emit(\"abort\");\n};\n\nRedirectableRequest.prototype.destroy = function (error) {\n  destroyRequest(this._currentRequest, error);\n  destroy.call(this, error);\n  return this;\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    self.removeListener(\"close\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n  this.on(\"close\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    throw new TypeError(\"Unsupported protocol \" + protocol);\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230\u00A75.3.1: When making a request directly to an origin server, [\u2026]\n  // a client MUST send only the absolute path [\u2026] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, [\u2026]\n    // a client MUST send the target URI in absolute-form [\u2026].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231\u00A76.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  destroyRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231\u00A76.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    throw new TooManyRedirectsError();\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231\u00A76.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, [\u2026]\n  // RFC7231\u00A76.4.2\u20133: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231\u00A76.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource [\u2026]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) [\u2026]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = parseUrl(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Create the redirected request\n  var redirectUrl = resolveUrl(location, currentUrl);\n  debug(\"redirecting to\", redirectUrl.href);\n  this._isRedirect = true;\n  spreadUrlObject(redirectUrl, this._options);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\n     redirectUrl.protocol !== \"https:\" ||\n     redirectUrl.host !== currentHost &&\n     !isSubdomain(redirectUrl.host, currentHost)) {\n    removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    beforeRedirect(this._options, responseDetails, requestDetails);\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  this._performRequest();\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters, ensuring that input is an object\n      if (isURL(input)) {\n        input = spreadUrlObject(input);\n      }\n      else if (isString(input)) {\n        input = spreadUrlObject(parseUrl(input));\n      }\n      else {\n        callback = options;\n        options = validateUrl(input);\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\nfunction noop() { /* empty */ }\n\nfunction parseUrl(input) {\n  var parsed;\n  /* istanbul ignore else */\n  if (useNativeURL) {\n    parsed = new URL(input);\n  }\n  else {\n    // Ensure the URL is valid and absolute\n    parsed = validateUrl(url.parse(input));\n    if (!isString(parsed.protocol)) {\n      throw new InvalidUrlError({ input });\n    }\n  }\n  return parsed;\n}\n\nfunction resolveUrl(relative, base) {\n  /* istanbul ignore next */\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n}\n\nfunction validateUrl(input) {\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  return input;\n}\n\nfunction spreadUrlObject(urlObject, target) {\n  var spread = target || {};\n  for (var key of preservedUrlFields) {\n    spread[key] = urlObject[key];\n  }\n\n  // Fix IPv6 hostname\n  if (spread.hostname.startsWith(\"[\")) {\n    spread.hostname = spread.hostname.slice(1, -1);\n  }\n  // Ensure port is a number\n  if (spread.port !== \"\") {\n    spread.port = Number(spread.port);\n  }\n  // Concatenate path\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n  return spread;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    Error.captureStackTrace(this, this.constructor);\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  Object.defineProperties(CustomError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n    },\n    name: {\n      value: \"Error [\" + code + \"]\",\n      enumerable: false,\n    },\n  });\n  return CustomError;\n}\n\nfunction destroyRequest(request, error) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.destroy(error);\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\nfunction isURL(value) {\n  return URL && value instanceof URL;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n", "var httpNative   = require('http'),\n    httpsNative  = require('https'),\n    web_o  = require('./web-outgoing'),\n    common = require('../common'),\n    followRedirects = require('follow-redirects');\n\nweb_o = Object.keys(web_o).map(function(pass) {\n  return web_o[pass];\n});\n\nvar nativeAgents = { http: httpNative, https: httpsNative };\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n\nmodule.exports = {\n\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\n       && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if(options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if(!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n\n    req.headers['x-forwarded-host'] = req.headers['x-forwarded-host'] || req.headers['host'] || '';\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, options, _, server, clb) {\n\n    // And we begin!\n    server.emit('start', req, res, options.target || options.forward);\n\n    var agents = options.followRedirects ? followRedirects : nativeAgents;\n    var http = agents.http;\n    var https = agents.https;\n\n    if(options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n\n      // error handler (e.g. ECONNRESET, ECONNREFUSED)\n      // Handle errors on incoming request as well as it makes sense to\n      var forwardError = createErrorHandler(forwardReq, options.forward);\n      req.on('error', forwardError);\n      forwardReq.on('error', forwardError);\n\n      (options.buffer || req).pipe(forwardReq);\n      if(!options.target) { return res.end(); }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function(socket) {\n      if(server && !proxyReq.getHeader('expect')) {\n        server.emit('proxyReq', proxyReq, req, res, options);\n      }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if(options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function() {\n         proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // handle errors in proxy and incoming request, just like for forward proxy\n    var proxyError = createErrorHandler(proxyReq, options.target);\n    req.on('error', proxyError);\n    proxyReq.on('error', proxyError);\n\n    function createErrorHandler(proxyReq, url) {\n      return function proxyError(err) {\n        if (req.socket.destroyed && err.code === 'ECONNRESET') {\n          server.emit('econnreset', err, req, res, url);\n          return proxyReq.abort();\n        }\n\n        if (clb) {\n          clb(err, req, res, url);\n        } else {\n          server.emit('error', err, req, res, url);\n        }\n      }\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function(proxyRes) {\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\n\n      if(!res.headersSent && !options.selfHandleResponse) {\n        for(var i=0; i < web_o.length; i++) {\n          if(web_o[i](req, res, proxyRes, options)) { break; }\n        }\n      }\n\n      if (!res.finished) {\n        // Allow us to listen when the proxy has completed\n        proxyRes.on('end', function () {\n          if (server) server.emit('end', req, res, proxyRes);\n        });\n        // We pipe to the response unless its expected to be handled by the user\n        if (!options.selfHandleResponse) proxyRes.pipe(res);\n      } else {\n        if (server) server.emit('end', req, res, proxyRes);\n      }\n    });\n  }\n\n};\n", "var http   = require('http'),\n    https  = require('https'),\n    common = require('../common');\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, socket, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n/*\n * Websockets Passes\n *\n */\n\n\nmodule.exports = {\n  /**\n   * WebSocket requests must have the `GET` method and\n   * the `upgrade:websocket` header\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   *\n   * @api private\n   */\n\n  checkMethodAndHeader : function checkMethodAndHeader(req, socket) {\n    if (req.method !== 'GET' || !req.headers.upgrade) {\n      socket.destroy();\n      return true;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      socket.destroy();\n      return true;\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders : function XHeaders(req, socket, options) {\n    if(!options.xfwd) return;\n\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: common.hasEncryptedConnection(req) ? 'wss' : 'ws'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n  },\n\n  /**\n   * Does the actual proxying. Make the request and upgrade it\n   * send the Switching Protocols request and pipe the sockets.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n  stream : function stream(req, socket, options, head, server, clb) {\n\n    var createHttpHeader = function(line, headers) {\n      return Object.keys(headers).reduce(function (head, key) {\n        var value = headers[key];\n\n        if (!Array.isArray(value)) {\n          head.push(key + ': ' + value);\n          return head;\n        }\n\n        for (var i = 0; i < value.length; i++) {\n          head.push(key + ': ' + value[i]);\n        }\n        return head;\n      }, [line])\n      .join('\\r\\n') + '\\r\\n\\r\\n';\n    }\n\n    common.setupSocket(socket);\n\n    if (head && head.length) socket.unshift(head);\n\n\n    var proxyReq = (common.isSSL.test(options.target.protocol) ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    if (server) { server.emit('proxyReqWs', proxyReq, req, socket, options, head); }\n\n    // Error Handler\n    proxyReq.on('error', onOutgoingError);\n    proxyReq.on('response', function (res) {\n      // if upgrade event isn't going to happen, close the socket\n      if (!res.upgrade) {\n        socket.write(createHttpHeader('HTTP/' + res.httpVersion + ' ' + res.statusCode + ' ' + res.statusMessage, res.headers));\n        res.pipe(socket);\n      }\n    });\n\n    proxyReq.on('upgrade', function(proxyRes, proxySocket, proxyHead) {\n      proxySocket.on('error', onOutgoingError);\n\n      // Allow us to listen when the websocket has completed\n      proxySocket.on('end', function () {\n        server.emit('close', proxyRes, proxySocket, proxyHead);\n      });\n\n      // The pipe below will end proxySocket if socket closes cleanly, but not\n      // if it errors (eg, vanishes from the net and starts returning\n      // EHOSTUNREACH). We need to do that explicitly.\n      socket.on('error', function () {\n        proxySocket.end();\n      });\n\n      common.setupSocket(proxySocket);\n\n      if (proxyHead && proxyHead.length) proxySocket.unshift(proxyHead);\n\n      //\n      // Remark: Handle writing the headers to the socket when switching protocols\n      // Also handles when a header is an array\n      //\n      socket.write(createHttpHeader('HTTP/1.1 101 Switching Protocols', proxyRes.headers));\n\n      proxySocket.pipe(socket).pipe(proxySocket);\n\n      server.emit('open', proxySocket);\n      server.emit('proxySocket', proxySocket);  //DEPRECATED.\n    });\n\n    return proxyReq.end(); // XXX: CHECK IF THIS IS THIS CORRECT\n\n    function onOutgoingError(err) {\n      if (clb) {\n        clb(err, req, socket);\n      } else {\n        server.emit('error', err, req, socket);\n      }\n      socket.end();\n    }\n  }\n};\n", "var httpProxy = module.exports,\n    extend    = require('util')._extend,\n    parse_url = require('url').parse,\n    EE3       = require('eventemitter3'),\n    http      = require('http'),\n    https     = require('https'),\n    web       = require('./passes/web-incoming'),\n    ws        = require('./passes/ws-incoming');\n\nhttpProxy.Server = ProxyServer;\n\n/**\n * Returns a function that creates the loader for\n * either `ws` or `web`'s  passes.\n *\n * Examples:\n *\n *    httpProxy.createRightProxy('ws')\n *    // => [Function]\n *\n * @param {String} Type Either 'ws' or 'web'\n *\u00A0\n * @return {Function} Loader Function that when called returns an iterator for the right passes\n *\n * @api private\n */\n\nfunction createRightProxy(type) {\n\n  return function(options) {\n    return function(req, res /*, [head], [opts] */) {\n      var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\n          args = [].slice.call(arguments),\n          cntr = args.length - 1,\n          head, cbl;\n\n      /* optional args parse begin */\n      if(typeof args[cntr] === 'function') {\n        cbl = args[cntr];\n\n        cntr--;\n      }\n\n      var requestOptions = options;\n      if(\n        !(args[cntr] instanceof Buffer) &&\n        args[cntr] !== res\n      ) {\n        //Copy global options\n        requestOptions = extend({}, options);\n        //Overwrite with request options\n        extend(requestOptions, args[cntr]);\n\n        cntr--;\n      }\n\n      if(args[cntr] instanceof Buffer) {\n        head = args[cntr];\n      }\n\n      /* optional args parse end */\n\n      ['target', 'forward'].forEach(function(e) {\n        if (typeof requestOptions[e] === 'string')\n          requestOptions[e] = parse_url(requestOptions[e]);\n      });\n\n      if (!requestOptions.target && !requestOptions.forward) {\n        return this.emit('error', new Error('Must provide a proper URL as target'));\n      }\n\n      for(var i=0; i < passes.length; i++) {\n        /**\n         * Call of passes functions\n         * pass(req, res, options, head)\n         *\n         * In WebSockets case the `res` variable\n         * refer to the connection socket\n         * pass(req, socket, options, head)\n         */\n        if(passes[i](req, res, requestOptions, head, this, cbl)) { // passes can return a truthy value to halt the loop\n          break;\n        }\n      }\n    };\n  };\n}\nhttpProxy.createRightProxy = createRightProxy;\n\nfunction ProxyServer(options) {\n  EE3.call(this);\n\n  options = options || {};\n  options.prependPath = options.prependPath === false ? false : true;\n\n  this.web = this.proxyRequest           = createRightProxy('web')(options);\n  this.ws  = this.proxyWebsocketRequest  = createRightProxy('ws')(options);\n  this.options = options;\n\n  this.webPasses = Object.keys(web).map(function(pass) {\n    return web[pass];\n  });\n\n  this.wsPasses = Object.keys(ws).map(function(pass) {\n    return ws[pass];\n  });\n\n  this.on('error', this.onError, this);\n\n}\n\nrequire('util').inherits(ProxyServer, EE3);\n\nProxyServer.prototype.onError = function (err) {\n  //\n  // Remark: Replicate node core behavior using EE3\n  // so we force people to handle their own errors\n  //\n  if(this.listeners('error').length === 1) {\n    throw err;\n  }\n};\n\nProxyServer.prototype.listen = function(port, hostname) {\n  var self    = this,\n      closure = function(req, res) { self.web(req, res); };\n\n  this._server  = this.options.ssl ?\n    https.createServer(this.options.ssl, closure) :\n    http.createServer(closure);\n\n  if(this.options.ws) {\n    this._server.on('upgrade', function(req, socket, head) { self.ws(req, socket, head); });\n  }\n\n  this._server.listen(port, hostname);\n\n  return this;\n};\n\nProxyServer.prototype.close = function(callback) {\n  var self = this;\n  if (this._server) {\n    this._server.close(done);\n  }\n\n  // Wrap callback to nullify server after all open connections are closed.\n  function done() {\n    self._server = null;\n    if (callback) {\n      callback.apply(null, arguments);\n    }\n  };\n};\n\nProxyServer.prototype.before = function(type, passName, callback) {\n  if (type !== 'ws' && type !== 'web') {\n    throw new Error('type must be `web` or `ws`');\n  }\n  var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\n      i = false;\n\n  passes.forEach(function(v, idx) {\n    if(v.name === passName) i = idx;\n  })\n\n  if(i === false) throw new Error('No such pass');\n\n  passes.splice(i, 0, callback);\n};\nProxyServer.prototype.after = function(type, passName, callback) {\n  if (type !== 'ws' && type !== 'web') {\n    throw new Error('type must be `web` or `ws`');\n  }\n  var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\n      i = false;\n\n  passes.forEach(function(v, idx) {\n    if(v.name === passName) i = idx;\n  })\n\n  if(i === false) throw new Error('No such pass');\n\n  passes.splice(i++, 0, callback);\n};\n", " // Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\nvar ProxyServer = require('./http-proxy/index.js').Server;\n\n\n/**\n * Creates the proxy server.\n *\n * Examples:\n *\n *    httpProxy.createProxyServer({ .. }, 8000)\n *    // => '{ web: [Function], ws: [Function] ... }'\n *\n * @param {Object} Options Config object passed to the proxy\n *\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\n *\n * @api public\n */\n\n\nfunction createProxyServer(options) {\n  /*\n   *  `options` is needed and it must have the following layout:\n   *\n   *  {\n   *    target : <url string to be parsed with the url module>\n   *    forward: <url string to be parsed with the url module>\n   *    agent  : <object to be passed to http(s).request>\n   *    ssl    : <object to be passed to https.createServer()>\n   *    ws     : <true/false, if you want to proxy websockets>\n   *    xfwd   : <true/false, adds x-forward headers>\n   *    secure : <true/false, verify SSL certificate>\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\n   *    localAddress : <Local interface string to bind for outgoing connections>\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\n   *    hostRewrite: rewrites the location hostname on (201/301/302/307/308) redirects, Default: null.\n   *    autoRewrite: rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port. Default: false.\n   *    protocolRewrite: rewrites the location protocol on (201/301/302/307/308) redirects to 'http' or 'https'. Default: null.\n   *  }\n   *\n   *  NOTE: `options.ws` and `options.ssl` are optional.\n   *    `options.target and `options.forward` cannot be\n   *    both missing\n   *  }\n   */\n\n  return new ProxyServer(options);\n}\n\n\nProxyServer.createProxyServer = createProxyServer;\nProxyServer.createServer      = createProxyServer;\nProxyServer.createProxy       = createProxyServer;\n\n\n\n\n/**\n * Export the proxy \"Server\" as the main export.\n */\nmodule.exports = ProxyServer;\n\n", "/*!\n * Caron dimonio, con occhi di bragia\n * loro accennando, tutte le raccoglie;\n * batte col remo qualunque s\u2019adagia \n *\n * Charon the demon, with the eyes of glede,\n * Beckoning to them, collects them all together,\n * Beats with his oar whoever lags behind\n *          \n *          Dante - The Divine Comedy (Canto III)\n */\n\nmodule.exports = require('./lib/http-proxy');"],
  "mappings": "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",
  "names": ["key", "exports", "proxyReq", "head", "require_http_proxy", "require_http_proxy"]
}
